<?php

namespace protocol\http;

use PHPUnit\Framework\TestCase;
use Surreal\SurrealHTTP;

class SigninTest extends TestCase
{
    private static SurrealHTTP $db;

    public static function setUpBeforeClass(): void
    {
        self::$db = new SurrealHTTP(
            host: "http://localhost:8000",
            target: ["namespace" => "test", "database" => "test"]
        );

        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws Exception
     */
    public function testSigninRoot(): void
    {

        $token = self::$db->signin([
            "user" => "beaurt",
            "pass" => "123456"
        ]);

        $this->assertIsString($token);
    }

    /**
     *
     * @throws Exception
     */
    public function testSigninDatabase(): void
    {
        $token = self::$db->signin([
            "user" => "beaudb",
            "pass" => "123456",
            "ns" => "test",
            "db" => "test"
        ]);

        $this->assertIsString($token);
    }

    /**
     * @throws Exception
     */
    public function testSigninScope(): void
    {
        $token = self::$db->signin([
            "user" => "beau",
            "pass" => "123456",
            "ns" => "test",
            "db" => "test",
            "sc" => "user"
        ]);

        $this->assertIsString($token);
    }

    public static function tearDownAfterClass(): void
    {
        self::$db->invalidate();

        // last check to make sure the token is invalidated
        $token = self::$db->getToken();
        self::assertNull($token, "Token is not invalidated");

        self::$db->close();
        parent::tearDownAfterClass();
    }
}